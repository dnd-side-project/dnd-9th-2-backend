name: Baggle Production Server CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: 🍃 docker image build 후 docker hub 에 push 합니다.
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }} .
          docker push ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }}

      - name: 🍃 deploy.sh 파일을 EC2 production server 로 전달합니다.
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_PROD_HOST }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "./scripts/deploy.sh"
          target: "/home/ubuntu/"

      - name: 🍃 docker-compose.yml 파일을 EC2 production server 로 전달합니다.
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_PROD_HOST }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "./docker-compose.yml"
          target: "/home/ubuntu/"

      - name: 🍃 docker hub 에서 pull 후 deploy 합니다.
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_PROD_HOST }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }}
            chmod 777 ./scripts/deploy.sh
            cp ./scripts/deploy.sh ./deploy.sh
            ./deploy.sh
            docker image prune -f